# -*- coding: utf-8 -*-

# 通过Qt5desinger设计界面后转为对应python文件

# Form implementation generated from reading ui file '界面.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtWidgets

import CTA


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(520, 120)
        MainWindow.setMinimumSize(QtCore.QSize(520, 120))
        MainWindow.setMaximumSize(QtCore.QSize(520, 120))
        MainWindow.setBaseSize(QtCore.QSize(520, 120))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(80, 40, 360, 20))
        self.lineEdit.setInputMask("")
        self.lineEdit.setObjectName("lineEdit")

        self.lineEdit2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit2.setGeometry(QtCore.QRect(80, 10, 360, 20))
        self.lineEdit2.setInputMask("")
        self.lineEdit2.setObjectName("lineEdit2")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(200, 80, 120, 40))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # 绑定按钮事件
        self.pushButton.clicked.connect(self.do_CTA)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "平差课设"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "请输入闭合导线"))
        self.pushButton.setText(_translate("MainWindow", "平差"))
        self.lineEdit2.setPlaceholderText(_translate("MainWindow", "请输入数据文件路径"))

    # 提示窗口
    def RaiseError(self, type: str, error: str):
        msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, type, error)
        msg_box.show()
        msg_box.exec_()

    # 平差按钮槽函数
    def do_CTA(self):
        if self.lineEdit2.text() != '':
            try:
                cta = CTA.CTA(self.lineEdit2.text())
            except:
                self.RaiseError('Error', '请输入正确的文件路径')
                return
        else:
            try:
                path = os.path.join(os.getcwd(), 'JFadjust_all.in2')
                cta = CTA.CTA(path)
                self.RaiseError('警告', '将使用运行根目录下的数据文件\n' + path)
            except:
                self.RaiseError('Error', '数据文件不存在')
                return
        if self.lineEdit.text() != '':

            try:
                cta.calculate(self.lineEdit.text())
            except Exception as e:
                self.RaiseError('计算错误', str(e))
                return
        else:
            self.RaiseError('Error', '请输入需要平差的闭合导线')
            return
        # cta.mk_XSL()

        try:
            cta.mk_XSL()
        except Exception as e:
            self.RaiseError('制表错误', str(e))
            return
        try:
            cta.draw()

        except Exception as e:
            self.RaiseError('绘图错误', str(e))
            return
